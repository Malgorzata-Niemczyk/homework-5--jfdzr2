{"version":3,"sources":["components/Navbar.tsx","components/page.tsx","components/title.tsx","components/pokemonTypesColors.tsx","hooks/useLocalStorage.tsx","views/pokemons/PokemonDetails.tsx","views/favourites/PokemonProfile.tsx","views/favourites/favourites.tsx","views/home/home.tsx","views/pokemons/PokemonsList.tsx","components/Pagination.tsx","views/pokemons/pokemons.tsx","App.tsx","index.tsx"],"names":["Navbar","className","to","Page","children","Title","props","pokemonTypesColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","useLocalStorage","key","initialValue","serialize","JSON","stringify","deserialize","parse","React","useState","valueInLocalStorage","window","localStorage","getItem","state","setState","prevKey","useRef","useEffect","current","removeItem","setItem","PokemonDetails","index","useParams","history","useHistory","pokemonData","setPokemonData","isLoading","setIsLoading","error","setError","errorMessage","setErrorMessage","favourites","setFavourites","avatar","setAvatar","types","setTypes","name","setName","id","setId","axios","get","then","res","data","sprites","front_default","map","typeItem","type","catch","err","console","log","style","textTransform","onClick","push","charAt","toUpperCase","slice","favourite","includes","color","cursor","disabled","favPokemonItem","length","shift","src","alt","species","Math","round","height","weight","backgroundColor","abilities","abilityItem","ability","PokemonProfile","width","join","Favourites","Home","PokemonsList","pokemons","pokemonPic","setPokemonPic","pokemonID","setPokemonID","cancel","cancelToken","CancelToken","c","Pagination","goToNextPage","goToPrevPage","page","totalPages","Pokemons","setPokemons","setPage","total","setTotal","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","previousPageUrl","setPreviousPageUrl","results","next","previous","ceil","count","prevPage","max","nextPage","min","pokemon","url","split","App","minHeight","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9512c102.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n \r\nconst Navbar: React.FC = () => {\r\n    return ( \r\n        <nav>\r\n            <ul className=\"flex poke-font justify-between\">\r\n                <li className=\"mr-4\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li className=\"mr-4\">\r\n                    <Link to=\"/pokemons\">Pokemons</Link>\r\n                </li>\r\n                <li className=\"mr-4 text-center\">\r\n                    <Link to=\"/favourites\">Favourites❤️</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import React from 'react'\r\n\r\ninterface IProps {\r\n  className?: string\r\n}\r\n\r\n\r\nexport const Page: React.FC<IProps> = ({children, className}) => {\r\n  return (\r\n    <div className={`mt-12 p-8 bg-red-500 rounded shadow-xl ${className ? className : ''}`}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Title: React.FC<{className?: string}> = ({ children, className, ...props }) => {\r\n  return (\r\n    <h1\r\n      className={`poke-font text-2xl text-center mt-2 text-white font-bold ${\r\n        className ? className : \"\"\r\n      }`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </h1>\r\n  );\r\n};\r\n","type TPokemonTypesColors = {\r\n    [key: string]: string\r\n}\r\n\r\nexport const pokemonTypesColors: TPokemonTypesColors = {\r\n    bug: '#729f3f',\r\n    dragon: '#53a4cf',\r\n    fairy: '#fdb9e9',\r\n    fire: '#fd7d24',\r\n    ghost: '#7b62a3',\r\n    ground: '#f7de3f',\r\n    normal: '#a4acaf',\r\n    pyschic: '#f366b9',\r\n    steel: '#9eb7bb',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#d56723',\r\n    flying: '#3dc7ef',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#a38c21',\r\n    water: '#4592c4'\r\n}","import React from 'react'\r\n\r\nexport const useLocalStorage = (\r\n  key: string,\r\n  initialValue: any = \"\",\r\n  { serialize = JSON.stringify, deserialize = JSON.parse } = {}\r\n) => {\r\n  const [state, setState] = React.useState(() => {\r\n    const valueInLocalStorage = window.localStorage.getItem(key);\r\n    if (valueInLocalStorage) {\r\n      return deserialize(valueInLocalStorage);\r\n    }\r\n    return typeof initialValue === \"function\" ? initialValue() : initialValue;\r\n  });\r\n  const prevKey: any = React.useRef(key);\r\n  React.useEffect(() => {\r\n    if (prevKey.current !== key) {\r\n      window.localStorage.removeItem(prevKey);\r\n    }\r\n    prevKey.current = key;\r\n\r\n    window.localStorage.setItem(key, serialize(state));\r\n  }, [key, serialize, state]);\r\n\r\n  return [state, setState];\r\n};\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Page } from \"../../components/page\";\r\nimport { Title } from \"../../components/title\";\r\nimport { pokemonTypesColors } from \"../../components/pokemonTypesColors\";\r\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\r\n\r\ninterface IPokemonData {\r\n    id: number,\r\n    name: string,\r\n    species: {\r\n        name: string\r\n    }\r\n    height: number,\r\n    weight: number,\r\n    sprites: {\r\n        front_default: string\r\n    }\r\n    types: [{\r\n        name: string\r\n    }],\r\n    abilities: []\r\n}\r\n\r\nconst PokemonDetails = () => {\r\n    const { index } = useParams() as {index: string | number};\r\n    const history = useHistory();\r\n    const [pokemonData, setPokemonData] = useState<IPokemonData>();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [favourites, setFavourites] = useLocalStorage('favourite-pokemons', [] as any);\r\n\r\n    const [avatar, setAvatar] = useState('');\r\n    const [types, setTypes] = useState<any>();\r\n    const [name, setName] = useState('');\r\n    const [id, setId] = useState<number>();\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${index}`)\r\n            .then(res => {\r\n                // console.log(res.data)\r\n                setPokemonData(res.data);\r\n                setAvatar(res.data.sprites.front_default);\r\n                setTypes(res.data.types.map((typeItem: any) => typeItem.type.name));\r\n                setName(res.data.name);\r\n                setId(res.data.id);\r\n                setIsLoading(false);\r\n                setError(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setError(true);\r\n                setErrorMessage('Pokemon not found!');\r\n                setIsLoading(false)\r\n            })\r\n    }, [index]);\r\n\r\n    const handleAddToFavPokemons: React.MouseEventHandler<HTMLButtonElement> = () => {\r\n        let favPokemonItem = {\r\n            id,\r\n            name,\r\n            avatar,\r\n            types\r\n        };\r\n\r\n        if (favourites.length > 5) {\r\n            favourites.shift()\r\n        };\r\n\r\n        setFavourites([...favourites, favPokemonItem]);\r\n    }\r\n\r\n    return (\r\n        <Page>\r\n            <button className=\"poke-font bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\" style={{textTransform: \"uppercase\"}} onClick={() => history.push('/pokemons')}>\r\n                ◀️ Back to Pokemons List\r\n            </button>\r\n            <div className=\"pokemon-details-wrapper text-white poke-font\">\r\n                { error ? (<p className=\"poke-font py-6 text-center\">{ errorMessage }</p>) : null }\r\n                { isLoading && <p className=\"text-white poke-font py-6 text-center\">Loading...</p> }\r\n                {pokemonData && (\r\n                    <div className=\"pokemon-details-card bg-red-700\">\r\n                        <div className=\"pokemon-details-title\">\r\n                            <Title>#{pokemonData.id}: {pokemonData.name.charAt(0).toUpperCase() + pokemonData.name.slice(1)}</Title>\r\n                            { favourites.map((favourite: any) => favourite.name).includes(pokemonData.name) ? \r\n                                (<button \r\n                                    className=\"poke-font bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\" \r\n                                    style={{\r\n                                        textTransform: \"uppercase\",\r\n                                        color: \"grey\",\r\n                                        cursor: \"not-allowed\"\r\n                                    }}\r\n                                    disabled={true}\r\n                                >\r\n                                    Added To 🖤\r\n                                </button>) :\r\n                                (<button \r\n                                    className=\"poke-font bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\" \r\n                                    style={{textTransform: \"uppercase\"}}\r\n                                    onClick={handleAddToFavPokemons}\r\n                                    >\r\n                                     Add To ❤️\r\n                                </button>)                  \r\n                            }\r\n                        </div>\r\n                        <div className=\"images\">\r\n                            <img src={pokemonData.sprites.front_default} alt=\"pokemon avatar\" />\r\n                        </div>\r\n                        <div className=\"pokemon-details-card-text\">\r\n                            <h3>Pokemon Info</h3>\r\n                            <p>Species: <span style={{color: 'lightskyblue'}}>{pokemonData.species.name}</span></p>\r\n                            <p>Height: {Math.round(pokemonData.height) / 10} m</p>\r\n                            <p>Weight: {Math.round(pokemonData.weight) / 10} kg</p>\r\n                            <p>Types:</p>\r\n                            <div className=\"pokemon-details-types-info\">\r\n                                {pokemonData.types.map((typeItem: any) => {\r\n                                    return <span style={{backgroundColor: pokemonTypesColors[typeItem.type.name]}} key={typeItem.type.name}>\r\n                                            {`${typeItem.type.name}`}\r\n                                        </span>\r\n                                })} \r\n                            </div>\r\n                            <p>Abilities:</p>\r\n                            <div className=\"pokemon-details-abilities-info\">\r\n                                {pokemonData.abilities.map((abilityItem: any) => {\r\n                                    return <span key={abilityItem.ability.name}>\r\n                                            {`${abilityItem.ability.name}`}\r\n                                        </span>\r\n                                })} \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Page> \r\n     );\r\n}\r\n \r\nexport default PokemonDetails;","import { Link } from \"react-router-dom\";\r\n\r\ninterface IPokemonProfileProps {\r\n    id: string | number,\r\n    name: string,\r\n    avatar: string,\r\n    types: []\r\n}\r\n\r\nconst PokemonProfile = ({id, name, avatar, types}: IPokemonProfileProps) => {\r\n    return ( \r\n        <Link to={`/pokemons/${id}`}>\r\n            <figure className=\"pokemon-card max-w-xs bg-gray-100 rounded-xl p-4 hover:bg-red-700 cursor-pointer\">\r\n                <img\r\n                    className=\"w-32 h-32 rounded-full mx-auto\"\r\n                    src={avatar}\r\n                    alt=\"Pokemon Avatar\"\r\n                    width=\"384\"\r\n                    height=\"512\"\r\n                />\r\n                <div className=\"pt-4 text-center\">\r\n                    <figcaption className=\"font-medium\">\r\n                        <div className=\"text-cyan-600\">#{id} {name}</div>\r\n                        <div className=\"text-gray-500\">{types.join(', ')}</div>\r\n                    </figcaption>\r\n                </div>\r\n            </figure> \r\n        </Link>\r\n     );\r\n}\r\n \r\nexport default PokemonProfile;","import React from 'react'\r\n// import { findRenderedComponentWithType } from 'react-dom/test-utils';\r\nimport { Page } from '../../components/page'\r\nimport { Title } from '../../components/title'\r\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\r\nimport PokemonProfile from './PokemonProfile';\r\n\r\n// const examplePokemon = {\r\n//   id: 1,\r\n//   name: \"bulbasaur\",\r\n//   avatar:\r\n//     \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-i/red-blue/1.png\",\r\n//   types: [\r\n//     {\r\n//       slot: 1,\r\n//       type: {\r\n//         name: \"grass\",\r\n//         url: \"https://pokeapi.co/api/v2/type/12/\",\r\n//       },\r\n//     },\r\n//     {\r\n//       slot: 2,\r\n//       type: {\r\n//         name: \"poison\",\r\n//         url: \"https://pokeapi.co/api/v2/type/4/\",\r\n//       },\r\n//     },\r\n//   ],\r\n// };\r\n\r\nexport const Favourites = () => {\r\n  const [favourites] = useLocalStorage('favourite-pokemons', [] as any);\r\n\r\n  return (\r\n    <Page>\r\n      <Title>Favourites</Title>\r\n        <div className=\"pokemons-fav-list-wrapper mt-8 poke-font text-xs\">\r\n          { favourites.length ? favourites.map((favourite: any, index: number) => \r\n            <PokemonProfile \r\n              key={`${favourite.name} - ${index}`} \r\n              name={favourite.name}\r\n              types={favourite.types}\r\n              avatar={favourite.avatar}\r\n              id={favourite.id} \r\n            />\r\n          ) : \r\n          (<div className=\"poke-font text-white text-center mt-7\">There are no pokemons in your favourites list</div>)\r\n          }\r\n        </div>\r\n\r\n      {/* <p className=\"text-white py-6 text-center\">\r\n        Here will be list of saved pokemons from localStorage\r\n      </p>\r\n\r\n       <ol className=\"text-white list-decimal\">\r\n        <p className=\"font-bold\">What you need to do</p>\r\n        <li>\r\n          Import hook `useLocalStorage` and use it to consume data from localStorage, it's fairly straightforward. Think of it as `useState`, in case of any problems don't hesitate to ask me for help\r\n        </li>\r\n        <li>\r\n          Use loaded data to display list of pokemons added to localStorage. If there is no pokemon in localStorage display message \"There is no pokemons in your favourties list \"\r\n        </li>\r\n        </ol>\r\n\r\n      <div className=\"grid grid-rows-2 grid-flow-col gap-4\">\r\n        <PokemonProfile\r\n          name={examplePokemon.name}\r\n          types={examplePokemon.types}\r\n          avatar={examplePokemon.avatar}\r\n          number={examplePokemon.id}\r\n        />\r\n        <PokemonProfile\r\n          name={examplePokemon.name}\r\n          types={examplePokemon.types}\r\n          avatar={examplePokemon.avatar}\r\n          number={examplePokemon.id}\r\n        />\r\n        <PokemonProfile\r\n          name={examplePokemon.name}\r\n          types={examplePokemon.types}\r\n          avatar={examplePokemon.avatar}\r\n          number={examplePokemon.id}\r\n        />\r\n        <PokemonProfile\r\n          name={examplePokemon.name}\r\n          types={examplePokemon.types}\r\n          avatar={examplePokemon.avatar}\r\n          number={examplePokemon.id}\r\n        />\r\n        <PokemonProfile\r\n          name={examplePokemon.name}\r\n          types={examplePokemon.types}\r\n          avatar={examplePokemon.avatar}\r\n          number={examplePokemon.id}\r\n        />\r\n        <PokemonProfile\r\n          name={examplePokemon.name}\r\n          types={examplePokemon.types}\r\n          avatar={examplePokemon.avatar}\r\n          number={examplePokemon.id}\r\n        />\r\n      </div> */}\r\n    </Page>\r\n  );\r\n}\r\n\r\n// const PokemonProfile = ({number, name, types, avatar}) => {\r\n\r\n// return (\r\n//   <figure className=\"max-w-xs bg-gray-100 rounded-xl p-4\">\r\n//     <img\r\n//       className=\"w-32 h-32 rounded-full mx-auto\"\r\n//       src={avatar}\r\n//       alt=\"\"\r\n//       width=\"384\"\r\n//       height=\"512\"\r\n//     />\r\n//     <div className=\"pt-4 text-center\">\r\n//       <figcaption className=\"font-medium\">\r\n//         <div className=\"text-cyan-600\">#{number} {name}</div>\r\n//         <div className=\"text-gray-500\">{types.map(({type}) => type.name).join(', ')}</div>\r\n//       </figcaption>\r\n//     </div>\r\n//   </figure>\r\n// );\r\n// }\r\n","import { Page } from \"../../components/page\";\r\nimport { Title } from \"../../components/title\";\r\n\r\nexport function Home() {\r\n  return (\r\n    <Page>\r\n      <Title>Pokedex</Title>\r\n    </Page>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\ninterface IPokemonProps {\r\n    id: number | string,\r\n    pokemons: {\r\n        name: string\r\n    }\r\n}\r\n\r\nconst PokemonsList = ({ pokemons, id }: IPokemonProps) => {\r\n    // console.log(pokemons)\r\n\r\n    const [pokemonPic, setPokemonPic] = useState('');\r\n    const [pokemonID, setPokemonID] = useState<number>();\r\n\r\n    useEffect(() => {\r\n        let cancel: any;\r\n        \r\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`, {cancelToken: new axios.CancelToken(c => cancel = c)})\r\n            .then(res => {\r\n                // console.log(res.data)\r\n                setPokemonPic(res.data.sprites.front_default);\r\n                setPokemonID(res.data.id);\r\n        })\r\n\r\n        return () => cancel();\r\n    }, [id]);\r\n\r\n    return ( \r\n        <Link to={`/pokemons/${pokemonID}`}>\r\n            <figure className=\"pokemon-card max-w-xs bg-gray-100 rounded-xl p-4 poke-font hover:bg-red-700 cursor-pointer\">\r\n                <img\r\n                    className=\"w-32 h-32 rounded-full mx-auto\"\r\n                    src={pokemonPic}\r\n                    alt=\"Pokemon Avatar\"\r\n                />\r\n                <div className=\"pt-4 text-center\">\r\n                    <figcaption className=\"font-medium\">\r\n                        <div className=\"text-cyan-600\">#{pokemonID}</div>\r\n                        <div className=\"text-cyan-600\">{pokemons.name}</div>\r\n                    </figcaption>\r\n                </div>\r\n            </figure> \r\n        </Link>\r\n     );\r\n}\r\n \r\nexport default PokemonsList;","type PaginationProps = {\r\n  goToNextPage: React.MouseEventHandler<HTMLButtonElement> | null,\r\n  goToPrevPage: React.MouseEventHandler<HTMLButtonElement> | null,\r\n  page: number,\r\n  totalPages: number\r\n}\r\n\r\nconst Pagination = ({goToNextPage, goToPrevPage, page, totalPages}: PaginationProps) => {\r\n    // console.log(props)\r\n    return (\r\n        <div className=\"pagination-buttons-wrapper flex poke-font\">\r\n          {goToPrevPage && <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\" onClick={goToPrevPage}>\r\n            Prev\r\n          </button>}\r\n          <div>\r\n            {page} of {totalPages}\r\n          </div>\r\n          {goToNextPage && <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\" onClick={goToNextPage}>\r\n            Next\r\n          </button>}\r\n        </div>\r\n     )\r\n}\r\n \r\nexport default Pagination;","import { Page } from \"../../components/page\";\r\nimport { Title } from \"../../components/title\";\r\n// import { pokeApiResponse } from \"../../utils/sampleResponse\";\r\nimport { useState, useEffect } from 'react';\r\nimport PokemonsList from \"./PokemonsList\"\r\nimport axios from \"axios\";\r\nimport Pagination from \"../../components/Pagination\";\r\n\r\ninterface IPokemon {\r\n  name: string,\r\n  url: string\r\n}\r\n\r\nexport function Pokemons() {\r\n  const [pokemons, setPokemons] = useState<IPokemon[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [page, setPage] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  let limit = 20;\r\n  let offset = 0;\r\n  const [currentPageUrl, setCurrentPageUrl] = useState(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`);\r\n  const [nextPageUrl, setNextPageUrl] = useState('')\r\n  const [previousPageUrl, setPreviousPageUrl] = useState('');\r\n  \r\n  useEffect(() => {\r\n    let cancel: any;\r\n    \r\n    axios.get(currentPageUrl, {cancelToken: new axios.CancelToken(c => cancel = c)})\r\n      .then(res => {\r\n        // console.log(res.data)\r\n        setPokemons(res.data.results)\r\n        setNextPageUrl(res.data.next);\r\n        setPreviousPageUrl(res.data.previous);\r\n        setTotal(Math.ceil(res.data.count / 20))\r\n        setIsLoading(false);\r\n        setError(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        setError(true);\r\n        setErrorMessage('Could not fetch the data :(')\r\n        setIsLoading(false);\r\n      })\r\n\r\n      return () => cancel();\r\n  }, [currentPageUrl]);\r\n\r\n  const handleGoToNextPage: React.MouseEventHandler<HTMLButtonElement> = () => {\r\n    setCurrentPageUrl(nextPageUrl);\r\n    const nextPage = Math.min(page + 1, total - 1);\r\n    setPage(nextPage);\r\n  };\r\n\r\n  const handleGoToPreviousPage: React.MouseEventHandler<HTMLButtonElement> = () => {\r\n    setCurrentPageUrl(previousPageUrl)\r\n    const prevPage = Math.max(page - 1, 0);\r\n    setPage(prevPage);\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <Title>Pokemons list</Title>\r\n        { error ? (<p className=\"text-white poke-font py-6 text-center\">{ errorMessage }</p>) : null }\r\n        { isLoading && <p className=\"text-white poke-font py-6 text-center\">Loading...</p> }\r\n        <Pagination\r\n          page={page + 1}\r\n          totalPages={total}\r\n          goToPrevPage={previousPageUrl ? handleGoToPreviousPage : null}\r\n          goToNextPage={nextPageUrl ? handleGoToNextPage : null}\r\n        />\r\n        <ol className=\"pokemons-list-wrapper\">\r\n          { pokemons && pokemons.map((pokemon) =>\r\n            <PokemonsList \r\n              key={`${pokemon.name} - ${pokemon.url.split('/')[6]}`} \r\n              pokemons={pokemon} \r\n              id={pokemon.url.split('/')[6]} \r\n            /> \r\n          )}\r\n        </ol>\r\n        \r\n      {/* <p className=\"text-white py-6 text-center\">\r\n        Here will be list of pokemons from pokeapi\r\n      </p>\r\n      <ol className=\"text-white list-decimal\">\r\n        <p className=\"font-bold\">What you need to do</p>\r\n        <li>\r\n          Call pokeapi inside useEffect (remember to not cause infinite loop\r\n          because you'll break pokeapi!) and save the response in state\r\n          (useState)\r\n        </li>\r\n        <li>\r\n          Display list of pokemons (pokeapi uses pagination so keep that in\r\n          mind) like example below\r\n        </li>\r\n        <li>\r\n         [Extra] Add buttons PREVIOUS - NEXT at the bottom so I can load next batch of pokemons\r\n        </li>\r\n        <li>\r\n          Handle states:\r\n          <p>Initial</p>\r\n          <p>Loading</p>\r\n          <p>Loaded</p>\r\n          <p>Error</p>\r\n        </li>\r\n        <li>\r\n          Create pokemon profile page, so when I click on selected pokemon I go\r\n          to the specific page where I can see more details about pokemon\r\n          (pokemonId, name, types and avatar). Refer to Favourites, you'll see\r\n          an example. Remember about react-router you have to create new route\r\n          for this and create separate component and separate Route.\r\n        </li>\r\n        <li>\r\n          In detailed view I want to have{\" \"}\r\n          <span className=\"font-bold\">ADD TO FAVOURITE </span>button which will\r\n          save selected pokemon to{\" \"}\r\n          <span className=\"font-bold\">localStorage</span> so later I can display\r\n          it in Favourite component.\r\n          [Extra] Maximum of 6, meaning if I add 7th pokemon\r\n          the first one gets removed from the localStorage\r\n        </li>\r\n      </ol>\r\n      <p className=\"text-white py-2\">\r\n        Example of what I want to see here is something like this\r\n      </p>\r\n      <ol className=\"poke-font text-white grid grid-cols-2 grid-flow-row-dense gap-1\">\r\n        {pokeApiResponse.map((pokemon, index) => (\r\n          <li\r\n            key={pokemon - index}\r\n            className={`hover:bg-red-700 cursor-pointer ${\r\n              index < 10 ? \"col-start-1\" : \"col-start-2\"\r\n            }`}\r\n          >\r\n            #{index + 1} - {pokemon.name}\r\n          </li>\r\n        ))}\r\n      </ol> */}\r\n    </Page>\r\n  );\r\n}\r\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar\";\r\nimport PokemonDetails from \"./views/pokemons/PokemonDetails\";\r\nimport { Favourites } from \"./views/favourites/favourites\";\r\nimport { Home } from \"./views/home/home\";\r\nimport { Pokemons } from \"./views/pokemons/pokemons\";\r\n\r\n\r\n/* Routing is not complete, please add missing part of the router to make it work properly\r\n\r\nTake a look at list of imported components!!!\r\n\r\nHINT: Missing routes are\r\n* /pokemons\r\n* /favourites\r\n* /\r\n\r\nIf you get stuck here refer to first pages of react-router documentation. I literally copied code from their tutorial\r\n\r\n* Later you'll have to comeback here to add additional route for /pokemons/:id but you'll know it when you get there\r\n*/\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      <main className=\"App bg-red-100\" style={{minHeight: '100vh'}}>\r\n        <div className=\"app-wrapper w-10/12 pt-4 mx-auto\">\r\n            <div>\r\n              <Navbar />\r\n                <div className=\"content\">\r\n                  <Switch>\r\n                    <Route exact path=\"/\">\r\n                      <Home/>\r\n                    </Route>\r\n                    <Route exact path=\"/pokemons\">\r\n                      <Pokemons/>\r\n                    </Route>\r\n                    <Route path=\"/pokemons/:index\">\r\n                      <PokemonDetails/>\r\n                    </Route>\r\n                    <Route path=\"/favourites\">\r\n                      <Favourites/>\r\n                    </Route>\r\n                  </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}