{"version":3,"sources":["components/Navbar.js","components/page.js","components/title.js","components/pokemonTypesColors.js","hooks/useLocalStorage.js","views/pokemons/PokemonDetails.js","views/favourites/PokemonProfile.js","views/favourites/favourites.js","views/home/home.js","views/pokemons/PokemonsList.js","components/Pagination.js","views/pokemons/pokemons.js","App.js","index.js"],"names":["Navbar","className","to","Page","children","Title","props","pokemonTypesColors","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","useLocalStorage","key","initialValue","serialize","JSON","stringify","deserialize","parse","React","useState","valueInLocalStorage","window","localStorage","getItem","state","setState","prevKey","useRef","useEffect","current","removeItem","setItem","PokemonDetails","index","useParams","history","useHistory","pokemonData","setPokemonData","isLoading","setIsLoading","error","setError","errorMessage","setErrorMessage","favourites","setFavourites","axios","get","then","res","data","catch","err","console","log","style","textTransform","onClick","push","id","name","charAt","toUpperCase","slice","map","favourite","includes","color","cursor","disabled","favPokemonItem","avatar","sprites","front_default","types","length","shift","src","alt","species","Math","round","height","weight","typeItem","backgroundColor","type","abilities","abilityItem","ability","PokemonProfile","width","join","Favourites","Home","PokemonsList","pokemons","pokemonPic","setPokemonPic","pokemonID","setPokemonID","Pagination","goToNextPage","goToPrevPage","page","totalPages","Pokemons","setPokemons","setPage","total","setTotal","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","previousPageUrl","setPreviousPageUrl","cancel","cancelToken","CancelToken","c","results","next","previous","ceil","count","prevPage","max","nextPage","min","pokemon","App","minHeight","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64f7c1d8.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n \r\nconst Navbar = () => {\r\n    return ( \r\n        <nav>\r\n            <ul className=\"flex poke-font justify-between\">\r\n                <li className=\"mr-4\">\r\n                    <Link to=\"/\">Home</Link>\r\n                </li>\r\n                <li className=\"mr-4\">\r\n                    <Link to=\"/pokemons\">Pokemons</Link>\r\n                </li>\r\n                <li className=\"mr-4 text-center\">\r\n                    <Link to=\"/favourites\">Favourites❤️</Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import React from 'react'\r\n\r\nexport const Page = ({children, className}) => {\r\n  return (\r\n    <div className={`mt-12 p-8 bg-red-500 rounded shadow-xl ${className ? className : ''}`}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const Title = ({ children, className, ...props }) => {\r\n  return (\r\n    <h1\r\n      className={`poke-font text-2xl text-center mt-2 text-white font-bold ${\r\n        className ? className : \"\"\r\n      }`}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </h1>\r\n  );\r\n};\r\n","export const pokemonTypesColors = {\r\n    bug: '#729f3f',\r\n    dragon: '#53a4cf',\r\n    fairy: '#fdb9e9',\r\n    fire: '#fd7d24',\r\n    ghost: '#7b62a3',\r\n    ground: '#f7de3f',\r\n    normal: '#a4acaf',\r\n    pyschic: '#f366b9',\r\n    steel: '#9eb7bb',\r\n    dark: '#707070',\r\n    electric: '#eed535',\r\n    fighting: '#d56723',\r\n    flying: '#3dc7ef',\r\n    grass: '#9bcc50',\r\n    ice: '#51c4e7',\r\n    poison: '#b97fc9',\r\n    rock: '#a38c21',\r\n    water: '#4592c4'\r\n}","import React from 'react'\r\n\r\nexport const useLocalStorage = (\r\n  key,\r\n  initialValue = \"\",\r\n  { serialize = JSON.stringify, deserialize = JSON.parse } = {}\r\n) => {\r\n  const [state, setState] = React.useState(() => {\r\n    const valueInLocalStorage = window.localStorage.getItem(key);\r\n    if (valueInLocalStorage) {\r\n      return deserialize(valueInLocalStorage);\r\n    }\r\n    return typeof initialValue === \"function\" ? initialValue() : initialValue;\r\n  });\r\n  const prevKey = React.useRef(key);\r\n  React.useEffect(() => {\r\n    if (prevKey.current !== key) {\r\n      window.localStorage.removeItem(prevKey);\r\n    }\r\n    prevKey.current = key;\r\n\r\n    window.localStorage.setItem(key, serialize(state));\r\n  }, [key, serialize, state]);\r\n\r\n  return [state, setState];\r\n};\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { Page } from \"../../components/page\";\r\nimport { Title } from \"../../components/title\";\r\nimport { pokemonTypesColors } from \"../../components/pokemonTypesColors\";\r\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\r\n\r\nconst PokemonDetails = () => {\r\n    const { index } = useParams();\r\n    const history = useHistory();\r\n    const [pokemonData, setPokemonData] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [favourites, setFavourites] = useLocalStorage('favourite-pokemons', []);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://pokeapi.co/api/v2/pokemon/${index}`)\r\n            .then(res => {\r\n                // console.log(res.data)\r\n                setPokemonData(res.data);\r\n                setIsLoading(false);\r\n                setError(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setError(true);\r\n                setErrorMessage('Pokemon not found!');\r\n                setIsLoading(false)\r\n            })\r\n    }, [index]);\r\n\r\n    const handleAddToFavPokemons = () => {\r\n        let favPokemonItem = {\r\n            id: pokemonData.id,\r\n            name: pokemonData.name,\r\n            avatar: pokemonData.sprites.front_default,\r\n            types: pokemonData.types\r\n        };\r\n\r\n        if (favourites.length > 5) {\r\n            favourites.shift()\r\n        };\r\n\r\n        setFavourites([...favourites, favPokemonItem]);\r\n    }\r\n\r\n    return (\r\n        <Page>\r\n            <button className=\"poke-font bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\" style={{textTransform: \"uppercase\"}} onClick={() => history.push('/pokemons')}>\r\n                ◀️ Back to Pokemons List\r\n            </button>\r\n            <div className=\"pokemon-details-wrapper text-white poke-font\">\r\n                { error ? (<p className=\"poke-font py-6 text-center\">{ errorMessage }</p>) : null }\r\n                { isLoading && <p className=\"text-white poke-font py-6 text-center\">Loading...</p> }\r\n                {pokemonData && (\r\n                    <div className=\"pokemon-details-card bg-red-700\">\r\n                        <div className=\"pokemon-details-title\">\r\n                            <Title>#{pokemonData.id}: {pokemonData.name.charAt(0).toUpperCase() + pokemonData.name.slice(1)}</Title>\r\n                            { favourites.map(favourite => favourite.name).includes(pokemonData.name) ? \r\n                                (<button \r\n                                    className=\"poke-font bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\" \r\n                                    style={{\r\n                                        textTransform: \"uppercase\",\r\n                                        color: \"grey\",\r\n                                        cursor: \"not-allowed\"\r\n                                    }}\r\n                                    disabled={true}\r\n                                >\r\n                                    Added To 🖤\r\n                                </button>) :\r\n                                (<button \r\n                                    className=\"poke-font bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\" \r\n                                    style={{textTransform: \"uppercase\"}}\r\n                                    onClick={handleAddToFavPokemons}\r\n                                    >\r\n                                     Add To ❤️\r\n                                </button>)                  \r\n                            }\r\n                        </div>\r\n                        <div className=\"images\">\r\n                            <img src={pokemonData.sprites.front_default} alt=\"pokemon avatar\" />\r\n                        </div>\r\n                        <div className=\"pokemon-details-card-text\">\r\n                            <h3>Pokemon Info</h3>\r\n                            <p>Species: <span style={{color: 'lightskyblue'}}>{pokemonData.species.name}</span></p>\r\n                            <p>Height: {Math.round(pokemonData.height) / 10} m</p>\r\n                            <p>Weight: {Math.round(pokemonData.weight) / 10} kg</p>\r\n                            <p>Types:</p>\r\n                            <div className=\"pokemon-details-types-info\">\r\n                                {pokemonData.types.map(typeItem => {\r\n                                    return <span style={{backgroundColor: pokemonTypesColors[typeItem.type.name]}} key={typeItem.type.name}>\r\n                                            {`${typeItem.type.name}`}\r\n                                        </span>\r\n                                })} \r\n                            </div>\r\n                            <p>Abilities:</p>\r\n                            <div className=\"pokemon-details-abilities-info\">\r\n                                {pokemonData.abilities.map(abilityItem => {\r\n                                    return <span key={abilityItem.ability.name}>\r\n                                            {`${abilityItem.ability.name}`}\r\n                                        </span>\r\n                                })} \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </Page> \r\n     );\r\n}\r\n \r\nexport default PokemonDetails;","import { Link } from \"react-router-dom\";\r\n\r\nconst PokemonProfile = ({id, name, avatar, types}) => {\r\n\r\n    return ( \r\n        <Link to={`/pokemons/${id}`}>\r\n            <figure className=\"pokemon-card max-w-xs bg-gray-100 rounded-xl p-4 hover:bg-red-700 cursor-pointer\">\r\n                <img\r\n                    className=\"w-32 h-32 rounded-full mx-auto\"\r\n                    src={avatar}\r\n                    alt=\"Pokemon Avatar\"\r\n                    width=\"384\"\r\n                    height=\"512\"\r\n                />\r\n                <div className=\"pt-4 text-center\">\r\n                    <figcaption className=\"font-medium\">\r\n                        <div className=\"text-cyan-600\">#{id} {name}</div>\r\n                        <div className=\"text-gray-500\">{types.map(({type}) => type.name).join(', ')}</div>\r\n                    </figcaption>\r\n                </div>\r\n            </figure> \r\n        </Link>\r\n     );\r\n}\r\n \r\nexport default PokemonProfile;","import React from 'react'\r\n// import { findRenderedComponentWithType } from 'react-dom/test-utils';\r\nimport { Page } from '../../components/page'\r\nimport { Title } from '../../components/title'\r\nimport { useLocalStorage } from '../../hooks/useLocalStorage';\r\nimport PokemonProfile from './PokemonProfile';\r\n\r\n// const examplePokemon = {\r\n//   id: 1,\r\n//   name: \"bulbasaur\",\r\n//   avatar:\r\n//     \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-i/red-blue/1.png\",\r\n//   types: [\r\n//     {\r\n//       slot: 1,\r\n//       type: {\r\n//         name: \"grass\",\r\n//         url: \"https://pokeapi.co/api/v2/type/12/\",\r\n//       },\r\n//     },\r\n//     {\r\n//       slot: 2,\r\n//       type: {\r\n//         name: \"poison\",\r\n//         url: \"https://pokeapi.co/api/v2/type/4/\",\r\n//       },\r\n//     },\r\n//   ],\r\n// };\r\n\r\nexport const Favourites = () => {\r\n  const [favourites] = useLocalStorage('favourite-pokemons', []);\r\n\r\n  return (\r\n    <Page>\r\n      <Title>Favourites</Title>\r\n        <div className=\"pokemons-fav-list-wrapper mt-8 poke-font text-xs\">\r\n          { favourites.length ? favourites.map((favourite, index) => \r\n            <PokemonProfile \r\n              key={`${favourite.name} - ${index}`} \r\n              name={favourite.name}\r\n              types={favourite.types}\r\n              avatar={favourite.avatar}\r\n              id={favourite.id} \r\n            />\r\n          ) : \r\n          (<div className=\"poke-font text-white text-center mt-7\">There are no pokemons in your favourites list</div>)\r\n          }\r\n        </div>\r\n\r\n      {/* <p className=\"text-white py-6 text-center\">\r\n        Here will be list of saved pokemons from localStorage\r\n      </p>\r\n\r\n       <ol className=\"text-white list-decimal\">\r\n        <p className=\"font-bold\">What you need to do</p>\r\n        <li>\r\n          Import hook `useLocalStorage` and use it to consume data from localStorage, it's fairly straightforward. Think of it as `useState`, in case of any problems don't hesitate to ask me for help\r\n        </li>\r\n        <li>\r\n          Use loaded data to display list of pokemons added to localStorage. If there is no pokemon in localStorage display message \"There is no pokemons in your favourties list \"\r\n        </li>\r\n        </ol>\r\n\r\n      <div className=\"grid grid-rows-2 grid-flow-col gap-4\">\r\n        <PokemonProfile\r\n          name={examplePokemon.name}\r\n          types={examplePokemon.types}\r\n          avatar={examplePokemon.avatar}\r\n          number={examplePokemon.id}\r\n        />\r\n        <PokemonProfile\r\n          name={examplePokemon.name}\r\n          types={examplePokemon.types}\r\n          avatar={examplePokemon.avatar}\r\n          number={examplePokemon.id}\r\n        />\r\n        <PokemonProfile\r\n          name={examplePokemon.name}\r\n          types={examplePokemon.types}\r\n          avatar={examplePokemon.avatar}\r\n          number={examplePokemon.id}\r\n        />\r\n        <PokemonProfile\r\n          name={examplePokemon.name}\r\n          types={examplePokemon.types}\r\n          avatar={examplePokemon.avatar}\r\n          number={examplePokemon.id}\r\n        />\r\n        <PokemonProfile\r\n          name={examplePokemon.name}\r\n          types={examplePokemon.types}\r\n          avatar={examplePokemon.avatar}\r\n          number={examplePokemon.id}\r\n        />\r\n        <PokemonProfile\r\n          name={examplePokemon.name}\r\n          types={examplePokemon.types}\r\n          avatar={examplePokemon.avatar}\r\n          number={examplePokemon.id}\r\n        />\r\n      </div> */}\r\n    </Page>\r\n  );\r\n}\r\n\r\n// const PokemonProfile = ({number, name, types, avatar}) => {\r\n\r\n// return (\r\n//   <figure className=\"max-w-xs bg-gray-100 rounded-xl p-4\">\r\n//     <img\r\n//       className=\"w-32 h-32 rounded-full mx-auto\"\r\n//       src={avatar}\r\n//       alt=\"\"\r\n//       width=\"384\"\r\n//       height=\"512\"\r\n//     />\r\n//     <div className=\"pt-4 text-center\">\r\n//       <figcaption className=\"font-medium\">\r\n//         <div className=\"text-cyan-600\">#{number} {name}</div>\r\n//         <div className=\"text-gray-500\">{types.map(({type}) => type.name).join(', ')}</div>\r\n//       </figcaption>\r\n//     </div>\r\n//   </figure>\r\n// );\r\n// }\r\n","import { Page } from \"../../components/page\";\r\nimport { Title } from \"../../components/title\";\r\n\r\nexport function Home() {\r\n  return (\r\n    <Page>\r\n      <Title>Pokedex</Title>\r\n    </Page>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst PokemonsList = ({ pokemons }) => {\r\n    // console.log(pokemons)\r\n\r\n    const [pokemonPic, setPokemonPic] = useState('');\r\n    const [pokemonID, setPokemonID] = useState();\r\n\r\n    useEffect(() => {\r\n       axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemons.name}`)\r\n        .then(res => {\r\n            // console.log(res.data)\r\n            setPokemonPic(res.data.sprites.front_default);\r\n            setPokemonID(res.data.id);\r\n        })\r\n    }, [pokemons]);\r\n\r\n    return ( \r\n        <Link to={`/pokemons/${pokemonID}`}>\r\n            <figure className=\"pokemon-card max-w-xs bg-gray-100 rounded-xl p-4 poke-font hover:bg-red-700 cursor-pointer\">\r\n                <img\r\n                    className=\"w-32 h-32 rounded-full mx-auto\"\r\n                    src={pokemonPic}\r\n                    alt=\"Pokemon Avatar\"\r\n                />\r\n                <div className=\"pt-4 text-center\">\r\n                    <figcaption className=\"font-medium\">\r\n                        <div className=\"text-cyan-600\">#{pokemonID}</div>\r\n                        <div className=\"text-cyan-600\">{pokemons.name}</div>\r\n                    </figcaption>\r\n                </div>\r\n            </figure> \r\n        </Link>\r\n     );\r\n}\r\n \r\nexport default PokemonsList;","const Pagination = (props) => {\r\n    // console.log(props)\r\n\r\n    const { goToNextPage, goToPrevPage, page, totalPages } = props;\r\n\r\n    return (\r\n        <div className=\"pagination-buttons-wrapper flex poke-font\">\r\n          {goToPrevPage && <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\" onClick={goToPrevPage}>\r\n            Prev\r\n          </button>}\r\n          <div>\r\n            {page} of {totalPages}\r\n          </div>\r\n          {goToNextPage && <button className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\" onClick={goToNextPage}>\r\n            Next\r\n          </button>}\r\n        </div>\r\n     )\r\n}\r\n \r\nexport default Pagination;","import { Page } from \"../../components/page\";\r\nimport { Title } from \"../../components/title\";\r\n// import { pokeApiResponse } from \"../../utils/sampleResponse\";\r\nimport { useState, useEffect } from 'react';\r\nimport PokemonsList from \"./PokemonsList\"\r\nimport axios from \"axios\";\r\nimport Pagination from \"../../components/Pagination\";\r\n\r\nexport function Pokemons() {\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [page, setPage] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  let limit = 20;\r\n  let offset = 0;\r\n  const [currentPageUrl, setCurrentPageUrl] = useState(`https://pokeapi.co/api/v2/pokemon?limit=${limit}&offset=${offset}`);\r\n  const [nextPageUrl, setNextPageUrl] = useState()\r\n  const [previousPageUrl, setPreviousPageUrl] = useState();\r\n  \r\n  useEffect(() => {\r\n    let cancel;\r\n    axios.get(currentPageUrl, {cancelToken: new axios.CancelToken(c => cancel = c)})\r\n      .then(res => {\r\n        // console.log(res.data)\r\n        setPokemons(res.data.results)\r\n        setNextPageUrl(res.data.next);\r\n        setPreviousPageUrl(res.data.previous);\r\n        setTotal(Math.ceil(res.data.count / 20))\r\n        setIsLoading(false);\r\n        setError(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n        setError(true);\r\n        setErrorMessage('Could not fetch the data :(')\r\n        setIsLoading(false);\r\n      })\r\n\r\n      return () => cancel();\r\n  }, [currentPageUrl]);\r\n\r\n  const handleGoToNextPage = () => {\r\n    setCurrentPageUrl(nextPageUrl);\r\n    const nextPage = Math.min(page + 1, total - 1);\r\n    setPage(nextPage);\r\n  };\r\n\r\n  const handleGoToPreviousPage = () => {\r\n    setCurrentPageUrl(previousPageUrl)\r\n    const prevPage = Math.max(page - 1, 0);\r\n    setPage(prevPage);\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <Title>Pokemons list</Title>\r\n        { error ? (<p className=\"text-white poke-font py-6 text-center\">{ errorMessage }</p>) : null }\r\n        { isLoading && <p className=\"text-white poke-font py-6 text-center\">Loading...</p> }\r\n        <Pagination\r\n          page={page + 1}\r\n          totalPages={total}\r\n          goToPrevPage={previousPageUrl ? handleGoToPreviousPage : null}\r\n          goToNextPage={nextPageUrl ? handleGoToNextPage : null}\r\n        />\r\n        <ol className=\"pokemons-list-wrapper\">\r\n          { pokemons && pokemons.map((pokemon, index) =>\r\n            <PokemonsList \r\n              key={`${pokemon.name} - ${index + 1}`} \r\n              pokemons={pokemon} \r\n              index={index} \r\n            /> \r\n          )}\r\n        </ol>\r\n        \r\n      {/* <p className=\"text-white py-6 text-center\">\r\n        Here will be list of pokemons from pokeapi\r\n      </p>\r\n      <ol className=\"text-white list-decimal\">\r\n        <p className=\"font-bold\">What you need to do</p>\r\n        <li>\r\n          Call pokeapi inside useEffect (remember to not cause infinite loop\r\n          because you'll break pokeapi!) and save the response in state\r\n          (useState)\r\n        </li>\r\n        <li>\r\n          Display list of pokemons (pokeapi uses pagination so keep that in\r\n          mind) like example below\r\n        </li>\r\n        <li>\r\n         [Extra] Add buttons PREVIOUS - NEXT at the bottom so I can load next batch of pokemons\r\n        </li>\r\n        <li>\r\n          Handle states:\r\n          <p>Initial</p>\r\n          <p>Loading</p>\r\n          <p>Loaded</p>\r\n          <p>Error</p>\r\n        </li>\r\n        <li>\r\n          Create pokemon profile page, so when I click on selected pokemon I go\r\n          to the specific page where I can see more details about pokemon\r\n          (pokemonId, name, types and avatar). Refer to Favourites, you'll see\r\n          an example. Remember about react-router you have to create new route\r\n          for this and create separate component and separate Route.\r\n        </li>\r\n        <li>\r\n          In detailed view I want to have{\" \"}\r\n          <span className=\"font-bold\">ADD TO FAVOURITE </span>button which will\r\n          save selected pokemon to{\" \"}\r\n          <span className=\"font-bold\">localStorage</span> so later I can display\r\n          it in Favourite component.\r\n          [Extra] Maximum of 6, meaning if I add 7th pokemon\r\n          the first one gets removed from the localStorage\r\n        </li>\r\n      </ol>\r\n      <p className=\"text-white py-2\">\r\n        Example of what I want to see here is something like this\r\n      </p>\r\n      <ol className=\"poke-font text-white grid grid-cols-2 grid-flow-row-dense gap-1\">\r\n        {pokeApiResponse.map((pokemon, index) => (\r\n          <li\r\n            key={pokemon - index}\r\n            className={`hover:bg-red-700 cursor-pointer ${\r\n              index < 10 ? \"col-start-1\" : \"col-start-2\"\r\n            }`}\r\n          >\r\n            #{index + 1} - {pokemon.name}\r\n          </li>\r\n        ))}\r\n      </ol> */}\r\n    </Page>\r\n  );\r\n}\r\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar\";\r\nimport PokemonDetails from \"./views/pokemons/PokemonDetails\";\r\nimport { Favourites } from \"./views/favourites/favourites\";\r\nimport { Home } from \"./views/home/home\";\r\nimport { Pokemons } from \"./views/pokemons/pokemons\";\r\n\r\n\r\n/* Routing is not complete, please add missing part of the router to make it work properly\r\n\r\nTake a look at list of imported components!!!\r\n\r\nHINT: Missing routes are\r\n* /pokemons\r\n* /favourites\r\n* /\r\n\r\nIf you get stuck here refer to first pages of react-router documentation. I literally copied code from their tutorial\r\n\r\n* Later you'll have to comeback here to add additional route for /pokemons/:id but you'll know it when you get there\r\n*/\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <main className=\"App bg-red-100\" style={{minHeight: '100vh'}}>\r\n        <div className=\"app-wrapper w-10/12 pt-4 mx-auto\">\r\n            <div>\r\n              <Navbar />\r\n                <div className=\"content\">\r\n                  <Switch>\r\n                    <Route exact path=\"/\">\r\n                      <Home/>\r\n                    </Route>\r\n                    <Route exact path=\"/pokemons\">\r\n                      <Pokemons/>\r\n                    </Route>\r\n                    <Route path=\"/pokemons/:index\">\r\n                      <PokemonDetails/>\r\n                    </Route>\r\n                    <Route path=\"/favourites\">\r\n                      <Favourites/>\r\n                    </Route>\r\n                  </Switch>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}